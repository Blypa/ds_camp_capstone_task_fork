name: Python application

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Run the workflow for the Python versions you support
        python-version: ["3.12.3"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 2.1.3

    - name: Set up Poetry cache
      uses: actions/cache@v4
      with:
        path: .venv
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Install dependencies
      run: poetry install --no-interaction

    - name: Check formatting and linting
      run: |
        poetry run isort . --check-only
        poetry run black . --check
        poetry run flake8 .
        poetry run mypy .

    - name: Run tests with pytest
      run: poetry run pytest